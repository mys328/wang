<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd"
       default-autowire="byName">

    <bean id="yunmeeting_core" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url"
                  value="jdbc:mysql://${core.jdbc.url}?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="${core.jdbc.username}"/>
        <property name="password" value="${core.jdbc.password}"/>

        <property name="initialSize" value="8"/>
        <!--最小连接池数量-->
        <property name="minIdle" value="1"/>
        <!--maxActive最大连接池数量-->
        <property name="maxActive" value="500"/>

        <property name="maxWait" value="60000"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
        <property name="filters" value="stat"/>
        <property name="connectionProperties" value="druid.stat.slowSqlMillis=5000"/>
    </bean>


    <!-- ========================================针对myBatis的配置项============================== -->
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="yunmeeting_core"/>
        <property name="typeAliasesPackage" value="com.thinkwin.config.po"/>
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations">
            <list>
                <value>classpath:config/mybatis/mapper/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- 配置扫描器 MapperScannerConfigurer指定了mapper接口所在的包路径。-->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类  DAO接口所在包名，Spring会自动查找其下的类-->
        <property name="basePackage" value="com.thinkwin.config.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--此mapper为Mybatis公共mapper
            如果自定义了MyMapper1,MyMapper2，增加以下配置
            （mappers=com.xxx.xxx.MyMapper,com.xxx.xxx.MyMapper2,com.xxx.xxx.MyMapper3）

            UUID由于是执行 SQL，所以底层是使用 <selectKey> 实现的，并且因为需要先得到 UUID 的值才能插入数据库，因此还需要配置 ORDER 属性
            注意是增加 ORDER=BEFORE 这一行，如果你还有其他配置，都可以按这种方式一行一个 key=value。
            这么配置以后就可以正确的获取 UUID 的值了。
            -->
        <property name="properties">
            <value>
                mappers=tk.mybatis.mapper.common.Mapper
                ORDER=BEFORE
            </value>
        </property>
    </bean>





</beans>
